"""assets_inflexible_sensors table + consumption_price_sensor, production_price_sensor and inflexible_device_sensors to generic_asset

Revision ID: e948267a6849
Revises: 81cbbf42357b
Create Date: 2024-05-10 20:57:41.759498

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "e948267a6849"
down_revision = "81cbbf42357b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "assets_inflexible_sensors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("generic_asset_id", sa.Integer(), nullable=True),
        sa.Column("inflexible_sensor_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["generic_asset_id"],
            ["generic_asset.id"],
            name=op.f("assets_inflexible_sensors_generic_asset_id_generic_asset_fkey"),
        ),
        sa.ForeignKeyConstraint(
            ["inflexible_sensor_id"],
            ["sensor.id"],
            name=op.f("assets_inflexible_sensors_inflexible_sensor_id_sensor_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("assets_inflexible_sensors_pkey")),
        sa.UniqueConstraint(
            "inflexible_sensor_id",
            "generic_asset_id",
            name="assets_inflexible_sensors_key",
        ),
    )
    with op.batch_alter_table("generic_asset", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("consumption_price_sensor_id", sa.Integer(), nullable=True)
        )
        batch_op.add_column(
            sa.Column("production_price_sensor_id", sa.Integer(), nullable=True)
        )
        batch_op.create_foreign_key(
            batch_op.f("generic_asset_consumption_price_sensor_id_sensor_fkey"),
            "sensor",
            ["consumption_price_sensor_id"],
            ["id"],
            ondelete="SET NULL",
        )
        batch_op.create_foreign_key(
            batch_op.f("generic_asset_production_price_sensor_id_sensor_fkey"),
            "sensor",
            ["production_price_sensor_id"],
            ["id"],
            ondelete="SET NULL",
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("generic_asset", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("generic_asset_production_price_sensor_id_sensor_fkey"),
            type_="foreignkey",
        )
        batch_op.drop_constraint(
            batch_op.f("generic_asset_consumption_price_sensor_id_sensor_fkey"),
            type_="foreignkey",
        )
        batch_op.drop_column("production_price_sensor_id")
        batch_op.drop_column("consumption_price_sensor_id")
    op.drop_table("assets_inflexible_sensors")
    # ### end Alembic commands ###
