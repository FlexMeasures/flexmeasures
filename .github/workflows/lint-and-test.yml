name: lint-and-test

on: ["push", "pull_request"]

jobs:
  check:
    runs-on: ubuntu-latest
    name: Check (on Python 3.9)
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - uses: actions/checkout@v2
      - uses: pre-commit/action@v2.0.0

  test:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py_version: [ '3.9' ]
        include:
          - python-version: "3.9"
            coverage: yes
    name: "Test (on Python ${{ matrix.py_version }})"
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py_version }}
      - name: Check out src from Git
        uses: actions/checkout@v2
      - name: Get history and tags for SCM versioning to work
        run: |
          git fetch --prune --unshallow
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          # manually disable a cache if needed by (re)setting CACHE_DATE
          key: ${{ runner.os }}-pip-${{ env.pythonLocation }}-${{ SECRETS.CACHE_DATE }}-${{ hashFiles('**/requirements/**.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - run: |
          ci/setup-postgres.sh
          sudo apt-get -y install coinor-cbc
      - name: Install FlexMeasures & dependencies for tests
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          make install-pip-tools
          make install-for-test
          pip install coveralls
      - name: Run all tests except those marked to be skipped by GitHub
        run: pytest -m "not skip_github"
        if: ${{ matrix.coverage != 'yes' }}
      - name: Run all tests except those marked to be skipped by GitHub AND record coverage
        run: pytest -v -m "not skip_github" --cov=flexmeasures --cov-branch
        if: ${{ matrix.coverage == 'yes' }}
      - run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ matrix.coverage == 'yes' }}
    env:
      PGHOST: 127.0.0.1
      PGPORT: 5432
      PGUSER: flexmeasures_test
      PGDB: flexmeasures_test
      PGPASSWORD: flexmeasures_test

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12.5 
        env:
          POSTGRES_USER: flexmeasures_test
          POSTGRES_PASSWORD: flexmeasures_test
          POSTGRES_DB: flexmeasures_test
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
